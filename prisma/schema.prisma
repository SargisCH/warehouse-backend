generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  IN
  OUT
}

enum Role {
  ADMIN
  MANAGER
  UNKNOWN
}

enum WeekDay {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model User {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  password    String?
  companyName String?
  role        Role?   @default(UNKNOWN)
  tenant      Tenant  @relation(fields: [tenantId], references: [id])
  tenantId    Int
}

model Tenant {
  id       Int     @id @default(autoincrement())
  name     String
  User     User[]
  balance  Float   @default(0)
  Credit   Credit? @relation(fields: [creditId], references: [id])
  creditId Int?
  currency String? @default("AMD")
}

model TransactionHistory {
  id                  Int                     @id @default(autoincrement())
  transactionType     TransactionType
  amount              Float
  sale                Sale?                   @relation(fields: [saleId], references: [id])
  saleId              Int?
  order               InventorySupplierOrder? @relation(fields: [orderId], references: [id])
  orderId             Int?
  client              Client?                 @relation(fields: [clientId], references: [id])
  clientId            Int?
  inventorySupplier   InventorySupplier?      @relation(fields: [inventorySupplierId], references: [id])
  inventorySupplierId Int?
  date                DateTime?               @default(now())
}

model Credit {
  id       Int       @id @default(autoincrement())
  amount   Int
  sale     Sale?     @relation(fields: [saleId], references: [id])
  saleId   Int?      @unique
  currency String?   @default("AMD")
  client   Client    @relation(fields: [clientId], references: [id])
  clientId Int
  date     DateTime? @default(now())
  Tenant   Tenant[]
}

model Inventory {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @unique
  amount                     Float
  amountUnit                 String
  price                      Float                        @default(0)
  currency                   String                       @default("AMD")
  created_at                 DateTime                     @default(now())
  updated_at                 DateTime                     @updatedAt
  //Ingredient Ingredient?
  Ingredient                 Ingredient[]
  InventorySupplierOrderItem InventorySupplierOrderItem[]
  SaleItem                   SaleItem[]
}

model Customer {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  TradeCredit TradeCredit?
}

model TradeCredit {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int      @unique
  amount     Float
  currency   String?  @default("AMD")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  ingredients  Ingredient[]
  price        Float
  priceUnit    String
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  StockProduct StockProduct?
}

model StockProduct {
  id          Int        @id @default(autoincrement())
  inStock     Float
  inStockUnit String
  product     Product    @relation(fields: [productId], references: [id])
  productId   Int        @unique
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  SaleItem    SaleItem[]
}

model ProductCategory {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Ingredient {
  product     Product   @relation(fields: [productId], references: [id])
  productId   Int
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId Int
  amount      Float
  amountUnit  String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@id([productId, inventoryId])
}

model Client {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique
  companyCode        String
  companyType        String
  companyId          String
  accountNumber      String
  bankAccountNumber  String
  legalAddress       String
  address            String
  phoneNumber        String
  otherPhoneNumber   String
  email              String
  contactPerson      String
  taxId              String
  created_at         DateTime             @default(now())
  updated_at         DateTime             @updatedAt
  Sale               Sale[]
  SaleItem           SaleItem[]
  Credit             Credit[]
  TransactionHistory TransactionHistory[]
  Schedule           Schedule[]
  manager            Manager?             @relation(fields: [managerId], references: [id])
  managerId          Int?
}

model Manager {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  phoneNumber String
  email       String
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  schedule    Schedule[]
  Client      Client[]
}

model InventorySupplier {
  id                 Int                      @id @default(autoincrement())
  name               String                   @unique
  created_at         DateTime                 @default(now())
  updated_at         DateTime                 @updatedAt
  orders             InventorySupplierOrder[]
  deleted            Boolean                  @default(false)
  TransactionHistory TransactionHistory[]
}

model InventorySupplierOrder {
  id                  Int                          @id @default(autoincrement())
  inventorySupplier   InventorySupplier            @relation(fields: [inventorySupplierId], references: [id])
  inventorySupplierId Int
  orderDate           DateTime                     @default(now())
  status              String?                      @default("")
  created_at          DateTime                     @default(now())
  updated_at          DateTime                     @updatedAt
  orderItems          InventorySupplierOrderItem[]
  SaleItem            SaleItem[]
  TransactionHistory  TransactionHistory[]
}

model InventorySupplierOrderItem {
  id                       Int                    @id @default(autoincrement())
  inventorySupplierOrder   InventorySupplierOrder @relation(fields: [inventorySupplierOrderId], references: [id])
  inventorySupplierOrderId Int
  inventory                Inventory              @relation(fields: [inventoryId], references: [id])
  inventoryId              Int
  price                    Float
  priceUnit                String
  amount                   Float
  amountUnit               String
  created_at               DateTime               @default(now())
  updated_at               DateTime               @updatedAt
}

model Sale {
  id                  Int                  @id @default(autoincrement())
  client              Client               @relation(fields: [clientId], references: [id])
  clientId            Int
  created_at          DateTime             @default(now())
  updated_at          DateTime             @updatedAt
  saleItems           SaleItem[]
  Credit              Credit?
  partialCreditAmount Int                  @default(0)
  paymentType         String               @default("")
  TransactionHistory  TransactionHistory[]
}

model SaleItem {
  id                       Int                     @id @default(autoincrement())
  stockProduct             StockProduct            @relation(fields: [stockProductId], references: [id])
  stockProductId           Int
  price                    Float
  priceUnit                String
  amount                   Float
  amountUnit               String
  sale                     Sale                    @relation(fields: [saleId], references: [id])
  saleId                   Int
  created_at               DateTime                @default(now())
  updated_at               DateTime                @updatedAt
  Inventory                Inventory?              @relation(fields: [inventoryId], references: [id])
  inventoryId              Int?
  Client                   Client?                 @relation(fields: [clientId], references: [id])
  clientId                 Int?
  InventorySupplierOrder   InventorySupplierOrder? @relation(fields: [inventorySupplierOrderId], references: [id])
  inventorySupplierOrderId Int?
}

model Schedule {
  id        Int       @id @default(autoincrement())
  client    Client?   @relation(fields: [clientId], references: [id])
  clientId  Int?
  manager   Manager?  @relation(fields: [managerId], references: [id])
  managerId Int?
  dayPlan   WeekDay[]

  @@unique([managerId, clientId])
}
